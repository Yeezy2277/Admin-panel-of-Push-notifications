{"version":3,"sources":["reportWebVitals.js","redux/PushReducer.js","API/api.js","redux/LoginReducer.js","redux/store.js","render.js","renderAdminPanel.js","AdminPanel.js","LoginPage.js","index.js","app.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","axios","withCredentials","baseURL","title","text","PUSH_NOTE","sendPush","type","payload","PushReducer","state","action","login","password","SET_USER_DATA","LoginReducer","reducers","combineReducers","form","formReducer","push","store","createStore","compose","applyMiddleware","thunkMiddleware","window","__store__","rerenderEntireTree","ReactDOM","render","StrictMode","document","getElementById","renderAdminPanel","connect","useState","setTitle","description","setDescription","className","styles","main","mainForm","TextField","id","onChange","evt","target","value","label","Button","variant","color","onClick","fetch","method","response","json","data","require","LoginPageReduxForm","reduxForm","setLogin","setPassword","isLogin","setIsLogin","useEffect","Redirect","from","to","props","onSubmit","formData","module","exports"],"mappings":"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","file":"static/js/main.f9bc1ffa.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {broadcastAPI} from \"../API/api\";\r\n\r\nlet initialState = {\r\n    title:null,\r\n    text:null\r\n}\r\n\r\nconst PUSH_NOTE = 'PUSH/PUSH_NOTE';\r\n\r\nconst PushReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case PUSH_NOTE: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport const sendPush = (title,text) => {\r\n    return { type: PUSH_NOTE, payload: {title,text}\r\n    }\r\n}\r\n\r\nexport const getPush = (title,text) => async (dispatch) => {\r\n    const response = await broadcastAPI.sendPush();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(sendPush(title,text));\r\n    }\r\n}\r\nexport default PushReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://pushall.ru/api.php',\r\n});\r\n\r\nexport const broadcastAPI = {\r\n     sendPush(title,text) {\r\n        return instance.post(`?type=self&id=103764&key=86f74f1d6807e6b2b86324931f75afd1&title=${title}&text=${text}`, {title,text});\r\n     }\r\n}","let initialState = {\r\n    login: null,\r\n    password: null\r\n}\r\n\r\nconst SET_USER_DATA = 'LOGIN/SET_USER_DATA'\r\n\r\nconst LoginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport const setLoginUserData = (login,password) => {\r\n    return {\r\n        type: SET_USER_DATA, payload: { login,password }\r\n    }\r\n}\r\n\r\nexport default LoginReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport LoginReducer from \"./LoginReducer\";\r\nimport PushReducer from \"./PushReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    form: formReducer,\r\n    login: LoginReducer,\r\n    push: PushReducer\r\n})\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunkMiddleware)))\r\nwindow.__store__ = store\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport LoginPage from \"./LoginPage\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nexport const rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <LoginPage />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n    reportWebVitals();\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport LoginPage from \"./LoginPage\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport AdminPanel from \"./AdminPanel\";\n\nexport const renderAdminPanel = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <AdminPanel />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n    reportWebVitals();\n\n}","import React, {useState} from \"react\";\nimport styles from \"./app.module.css\"\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {connect} from \"react-redux\";\nimport {sendPush} from \"./redux/PushReducer\";\nimport {renderAdminPanel} from \"./renderAdminPanel\";\n\nfunction AdminPanel() {\n    const [title,setTitle] = useState('')\n    const [description,setDescription] = useState('')\n    \n    const onTitleChange = (evt) => {\n      setTitle(evt.target.value);\n      renderAdminPanel();\n    }\n    const OnDescriptionChange = (evt) => {\n      setDescription(evt.target.value);\n        renderAdminPanel();\n    }\n    const setPush = () => {\n        fetch(`https://pushall.ru/api.php?type=broadcast&id=5532&key=9679936daf74cb54224168fd049e3bc9&title=${title}&text=${description}`\n            ,{ method: 'POST'})\n            .then(response => response.json())\n    }\n  return (\n  <div className={styles.main}>\n      <form className={styles.mainForm}>\n          <h1>Отправка пуш-запросов</h1>\n          <TextField id=\"standard-basic\" onChange={onTitleChange} value={title} label=\"Заголовок\" />\n          <TextField id=\"standard-basic\"  onChange={OnDescriptionChange} value={description} label=\"Текст\" />\n          <Button variant=\"contained\" color=\"primary\" type='button' onClick={setPush}>Запушить</Button>\n      </form>\n  </div>\n  );\n}\n\nexport default connect(null,{sendPush})(AdminPanel);\n","import React, {useEffect, useState} from \"react\";\nimport styles from \"./app.module.css\"\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {sendPush} from \"./redux/PushReducer\";\nimport {rerenderEntireTree} from \"./render\";\nimport AdminPanel from \"./AdminPanel\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport Route from \"react-router-dom/es/Route\";\nimport {renderAdminPanel} from \"./renderAdminPanel\";\nconst data =  require( \"./data.json\");\n\nfunction LoginPageForm() {\n    const [login,setLogin] = useState('')\n    const [password,setPassword] = useState('')\n    const [isLogin,setIsLogin] = useState(null)\n\n    useEffect(() => {\n        return <Redirect from=\"*\" to=\"/\"/>\n    },[])\n\n    const onLoginChange = (evt) => {\n        setLogin(evt.target.value);\n        rerenderEntireTree();\n    }\n    const onPasswordChange = (evt) => {\n        setPassword(evt.target.value);\n        rerenderEntireTree();\n    }\n\n    const isCorrect = () => {\n        if (data.login === login && data.password === password) {\n            setIsLogin(true);\n        }\n        else {\n            setIsLogin(false);\n        }\n\n        }\n  return (\n  <div className={styles.main}>\n      <form className={styles.mainForm}>\n          <h1>Авторизация</h1>\n          <TextField id=\"standard-basic\" onChange={onLoginChange} value={login} label=\"Логин\" />\n          <TextField id=\"standard-basic\" onChange={onPasswordChange} value={password} label=\"Пароль\" />\n          <Button variant=\"contained\" color=\"primary\" onClick={isCorrect} type=\"button\">Войти</Button>\n          {isLogin === true ? renderAdminPanel(): null}\n          {isLogin === false ? <p>Неправильный логин или пароль</p> : null}\n      </form>\n  </div>\n  );\n}\nconst LoginPageReduxForm = reduxForm({\n    form: 'login'\n})(LoginPageForm);\n\nconst LoginPage = (props) => {\n    const onSubmit = (formData) => {\n        props.sendPush(formData.title, formData.text);\n    }\n    return <div>\n        <LoginPageReduxForm onSubmit={onSubmit}/>\n    </div>\n}\n\nexport default connect(null,{sendPush})(LoginPage);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport LoginPage from \"./LoginPage\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n            <Provider store={store}>\n                <LoginPage />\n            </Provider>\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n    reportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__mva-s\",\"mainForm\":\"app_mainForm__2ZhT8\"};"],"sourceRoot":""}